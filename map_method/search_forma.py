import re

from yargy import (
Parser,
    rule, or_, and_, not_,
    interpretation as interp
)
from yargy.predicates import (
    caseless, type, gram, normalized,
    in_, in_caseless, dictionary, gte ,lte
)
from yargy.pipelines import (
    caseless_pipeline,
    morph_pipeline
)
from yargy.interpretation import (
    fact,
    attribute
)


def show_matches(rule, *lines):
    """
        отрабатывает правило выделение значимых слов для определения пренадлежности к классу
    """
    parser = Parser(rule)
    for line in lines:
        matches = parser.findall(line)
        matches = sorted(matches, key=lambda _: _.span)
        #spans = [_.span for _ in matches]
        #show_markup(line, spans, AsciiMarkup)
        if matches:
            facts = [_.fact for _ in matches]
            if len(facts) == 1:
                facts = facts[0]    
            return "".join([" ".join(re.findall(r"[А-Яа-я-]+",str(x))) for x in facts])
        else:
            return('no data')

def tabletka_search(text):  
    
    Forma = fact('Forma',['name'])

    TABLETKI = caseless_pipeline(['таблетки','тбл','таб.','табл','тбл.','таб','табп/пл','ТБ','тб','ТАБ.','ТАБ']).interpretation(Forma.name.const('таблетки'))
    POKR_OBOL = caseless_pipeline(['п/о', 'п/о.', 'об']).interpretation(Forma.name.const('покрытые оболочкой'))
    POKR_OBOL_DLIA_KISH = caseless_pipeline(['п/о','п/о.','об','п/к/о','п/о']).interpretation(Forma.name.const('покрытые оболочкой')).interpretation(Forma)
    POKR_PLEN_OBOL = caseless_pipeline(['п/п/о', 'п/п/о.', 'табп/пл об', 'П/ПЛ/О', 'п/пл', 'П/П/О', 'П/О ПЛЕН', 'п/п/о', 'П/ПЛЁН ОБ','П/ПЛЁН','п/пл/о']).interpretation(Forma.name.const('покрытые пленочной оболочкой')).interpretation(Forma)

    NAME_ADD_PROLONG = caseless_pipeline([

        'пролонгированного действия',
        'пролонг. д-я',
        'пролонг',
        'таб.пролонг',
        'прол',
        'пролонгир',
        'пролонг',
        'пролон',
        'пролонгиров',
        'ПРЛЛОНГ',
        'прол',
        'ПРОЛОГ. ДЕЙСТ.'

    ]).interpretation(
        Forma.name.const('пролонгированного действия')
    )

    NAME_ADD_RASS = caseless_pipeline([

        'д/р',
        'РАССАСЫВАНИЯ',
        'д/рассасыв.',
        'д/рассасывания',
        'д/рассасыван',
        'таб.д/расс',
        'д\расс',
        'Д/РАСС',
        'ДЛЯ РАСС.',
        'Д/РАССАС',
        'расс',
        'д/расс.',
        'ДЛЯ РАССАСЫВ.',
        'Д/РАССАСЫВАНИЯ',
        'д/рассасыв'

    ]).interpretation(
        Forma.name.const('для рассасывания')
    )

    NAME_ADD_SHIPUCHUE = caseless_pipeline([

        'шип.',
        'шипучие',
        'шип',
        'шипуч'

    ]).interpretation(
        Forma.name.const('шипучие')
    )

    NAME_ADD_ZHEVATELNIE = caseless_pipeline([

        'жеват.',
        'жеват',
        'жев',
        'жев.',
        'ЖЕВАТЕЛЬНЫЕ'


    ]).interpretation(
        Forma.name.const('жевательные')
    )

    NAME_ADD_SUBLINGUALNO = caseless_pipeline([

        'сублингв',
        'сублингвал',
        'сублингвфл-кап',
        'сублинг'

    ]).interpretation(
        Forma.name.const('сублингвально')
    )
    
    NAME_ADD_LINGUALNO = caseless_pipeline([
    
        'лингв',
        'лингв.'

    ]).interpretation(
        Forma.name.const('лингвально')
    )
    
    NAME_ADD_PODJAZYCHNIE = caseless_pipeline([

        'подъязыч',
        'ПОДЪЯЗЫЧН',
        'подъяз',
        'подъязычные',
        'под языч',
        'подязычные',
        'подяз.'


    ]).interpretation(
        Forma.name.const('подъязычные')
    )

    NAME_ADD_DISPERGIRUEMYE = caseless_pipeline([

        'ДИСПЕРГ',
        'ДИСПЕРГИРУЕМЫЕ',
        'дисп',
        'диспер',
        'диспергир',

    ]).interpretation(
        Forma.name.const('диспергируемые')
    )
    
    NAME_ADD_VGINALNYE = caseless_pipeline([

        'вагин',
        'вагинальный',
        'ВАГ.',
        'ваг'


    ]).interpretation(
        Forma.name.const('вагинальные')
    )

    NAME_ADD_DLYA_DETEY = caseless_pipeline([

        'для детей',
        'д/детей',
        'д/дет',
        'детс',
        'детск',
        'д/дет',
        'детский'


    ]).interpretation(
        Forma.name.const('для детей')
    )

    POKR_KISH_OBOL = caseless_pipeline([

        'кишечнорастворимой',
        'п/к/о',
        'кишечнор. обол',
        'КИШЕЧНОР.ОБ.',
        'кишечнор',
        'кишечнор.'
        'киш. обол',
        'кишечн',
        'кишечнораств.',
        'кишечн',
        'КИШ.РАСТ.',
        'П/КИШЕЧ/ОБОЛОЧ',
        'киш-раств',
        'КИШ-РАСТВ',
        'п/окишечн',
        'КИШЕЧНОРАСТВОР',
        'КИШ-РАСТВ',
        'покр киш. обол',
        'КИШ-РАСТВ.',
        'П/КИШЕЧ/РАСТВ/ОБОЛОЧ',
        'кишеч',
        'кишечнораств',
        'КИШЕЧНОРАСТВОРИМ',
        'П/КИШЕЧНОРАСТВ.',
        'п/киш/о',
        'П/КИШЕЧНОРАСТВОРИМ',
        'покр.кишечнор.об.',
        'КИШ.РАСТ. ',
        'ТАБ.ПОКР.КИШЕЧНОР.ОБ.',
        'п/кишечнор.',
        'кш/раств'
        

    ]).interpretation(
        Forma.name.const('кишечнорастворимые')
    )
    
    NAME_ADD_GOMEOPAT = caseless_pipeline([

        'гомео',
        'гомеопат'
      
    ]).interpretation(
        Forma.name.const('гомеопатические')
    ).interpretation(Forma)
    
    NAME_ADD_DEPO = caseless_pipeline([

        'депо',
        
        #Моно Мак Депо, тбл ретард 100мг №50
        #Синекод депо, тбл 50мг N10__Импорт
    ]).interpretation(
        Forma.name.const('депо')
    )
    
    NAME_ADD_IMPLANT = caseless_pipeline([

        'д/имплантации',
        'д/имплантаций'
        
    ]).interpretation(
        Forma.name.const('для имплантаций')
    )
    
    NAME_ADD_GLAS_KAPEL = caseless_pipeline([

        'д/кап.гл.',
        
        
    ]).interpretation(
        Forma.name.const('для глазных капель')
    )
    
    NAME_ADD_DIS_RASTVOR = caseless_pipeline([

        'д/дезинф',
       
    ]).interpretation(
        Forma.name.const('дезраствор')
    )
    
    NAME_ADD_RASTVOR = caseless_pipeline([

        'д/р-ра',
        'Р-РА'
       
    ]).interpretation(
        Forma.name.const('для приготовления раствора')
    )
    
    RASTVOR_NAR = caseless_pipeline([

        'наружн',
        'д/наруж',
        'д/нар',
        'нар',
        'д/наруж прим'

    ]).interpretation(
        Forma.name.const('для наружного применения'))
    
    RASTVOR_DLYA_PRIEMA_VNUTR = caseless_pipeline([
    
        'внутрь',
        'д/приема внутрь',
        'д/пр внутрь',
        'внутр',
        'д/п вн',
        'внут',
        'д/п внутрь',
        'д/приема вн',
        'д/пр/вн',
        'для приема внутрь',
        'д/вн/п',
        'Д/ПР. ВНУТРЬ',
        'Д/ВН.ПР.',
        'Д/ПРИЕМ.ВНУТРЬ',
        'д/внутр',
        'д/пр внутрь',
        'д/прием.внутрь',
        'д/вн прим',
        'д/внут прим',
        'д/п/внут',
        'р-р д/приема вн'
    
    ]).interpretation(
        Forma.name.const('для приема внутрь'))
    
    RASTVOR_DLIA_MESTNOGO_PRIMENENIA = caseless_pipeline([

        'д/мест',
        'мест',
        'д/местн',
        'для местн',
        'местн',
        'д/мест',
        'д/местного'
     
    ]).interpretation(
        Forma.name.const('для местного применения'))
    
    NAME_ADD_BEZ_SAHARA = caseless_pipeline([

        'Б/САХАРА',
       'без сахара'

    ]).interpretation(
        Forma.name.const('без сахара')
    ).interpretation(Forma)
    
    '''NAME_ADD_GEVATELNIE = caseless_pipeline([

        'жеват',
        'жев'
        
    ]).interpretation(
        Forma.name.const('жевательные')
    ).interpretation(Forma)'''
    
    NAME_ADD_DLIA_PRIG_SUSPENZII = caseless_pipeline([

        'для приг сусп',
        'сусп'
        
    ]).interpretation(
        Forma.name.const('для приготовления суспензии')
    ).interpretation(Forma)
    
    NAME_ADD_ZASCHECHNIE = caseless_pipeline([

        'защечн',
        'защечные',
        'защ'
        
    ]).interpretation(
        Forma.name.const('защечные')
    ).interpretation(Forma)
    
    NAME_ADD_LIOFIL = caseless_pipeline([

        'лиоф',
        'лиофилизированные'
        
    ]).interpretation(
        Forma.name.const('лиофилизированные')
    ).interpretation(Forma)
    
    NAME_ADD_PIROTECHN = caseless_pipeline([

        'пиротехн.'
        
    ]).interpretation(
        Forma.name.const('пиротехнические')
    ).interpretation(Forma)
    
    NAME_ADD_DELIMIE = caseless_pipeline([

        'дел'
        
    ]).interpretation(
        Forma.name.const('делимые')
    ).interpretation(Forma)
    
    NAME_ADD_RETARD = caseless_pipeline([

        'рет',
        'ретард',
        'ретарт'

    ]).interpretation(
        Forma.name.const('ретард')
    ).interpretation(Forma)
    
    NAME_ADD_RAPID_RETARD = caseless_pipeline([

        'рапид-ретард'
        
    ]).interpretation(
        Forma.name.const('рапид-ретард')
    ).interpretation(Forma)
    
    NAME_ADD_ZAM_VYSV = caseless_pipeline([

        'замедл. высв.',
        'замедл высвобожд',
        'замедл высв',
        'замед высв'
        
    ]).interpretation(
        Forma.name.const('таблетки с замедленным высвобождением')
    ).interpretation(Forma)
    
    NAME_ADD_RASTVORIMIE = caseless_pipeline([

        'раств.',
        'растворим.',
        'раствор',
        'раств.'
        
    ]).interpretation(
        Forma.name.const('таблетки растворимые')
    ).interpretation(Forma)
    
    NAME_ADD_KONTR_VYSVOB = caseless_pipeline([

        'контрол высв',
        'контр. высвоб.',
        'контрол высв',
        'контролир.высвоб.',
        'контрол высв',
        'контр высв'
        
        
    ]).interpretation(
        Forma.name.const('таблетки с контролируемым высвобождением')
    ).interpretation(Forma)
    
    NAME_ADD_MODIF_VYSVOB = caseless_pipeline([

        'модиф высвоб',
        'модиф.высв.',
        'МОДИФ. ВЫСВ.',
        'модиф высв',
        'модиф высвоб',
        'модифицир высвоб',
        'модифициров.высвобожд.',
        'модифиц высвоб',
        'модиф высвобожд',
        'модиф.высвоб',
        'модиф. высвоб.',
        'модиф высвобожд'
        
    ]).interpretation(
        Forma.name.const('таблетки с модифицированным высвобождением')
    ).interpretation(Forma)
    
    NAME_ADD_V_POLOSTI_RTA = caseless_pipeline([

       'полости',
       'рта',
       'полости',
       'в полости рта'
    
        
    ]).interpretation(
        Forma.name.const('в полости рта')
    ).interpretation(Forma)
    
    NAME_ADD_KOMPLEKT = caseless_pipeline([

       'комплект',
       'комп',
       
    
        
    ]).interpretation(
        Forma.name.const('в комплекте')
    ).interpretation(Forma)
    
    NAME_ADD_SAH_OBL = caseless_pipeline([

       'сах',
       'п.сах.о',
       'п/сахарн',
       'п/о сах',
       'п/о сахарн',
       'п/о сахарной',
       'п сах/о'
       
    ]).interpretation(
        Forma.name.const('покрытые сахарной оболочкой')
    ).interpretation(Forma)
    
    # -------------------------------------------------

    if show_matches(TABLETKI, text) == 'таблетки' or show_matches(TABLETKI, text) == 'таблеткитаблетки':      
    
        if show_matches(NAME_ADD_RASTVOR, text) == 'дляприготовленияраствора':
            if show_matches(RASTVOR_NAR, text) == 'длянаружногоприменения' and show_matches(RASTVOR_DLIA_MESTNOGO_PRIMENENIA, text) == 'дляместногоприменения':
                return 'таблетки для приготовления раствора для местного и наружного применения'
            elif show_matches(RASTVOR_DLIA_MESTNOGO_PRIMENENIA, text) == 'дляместногоприменения':
                return 'таблетки для приготовления раствора для местного применения'
            elif show_matches(RASTVOR_DLYA_PRIEMA_VNUTR, text) == 'дляприемавнутрь':
                return 'таблетки для приготовления раствора для приема внутрь'
        
        
        
        elif show_matches(NAME_ADD_DIS_RASTVOR, text) == 'дезраствор':
            return 'таблетки для приготовления дезинфицирующего раствора'
        
        elif show_matches(NAME_ADD_ZASCHECHNIE, text) == 'защечные':
            return 'таблетки защечные'
        
        elif show_matches(NAME_ADD_GLAS_KAPEL, text) == 'дляглазныхкапель':
            return 'таблетки для приготовления глазных капель'
        
        elif show_matches(NAME_ADD_IMPLANT, text) == 'дляимплантаций':
            return 'таблетки для имплантаций'
        
        
        # KISHECHNORASTVORIMIE
        
        
        elif show_matches(POKR_KISH_OBOL, text) == 'кишечнорастворимые':
            
            if show_matches(POKR_PLEN_OBOL, text) == 'покрытые пленочной оболочкой':
                if show_matches(NAME_ADD_PROLONG, text) == 'пролонгированногодействия':
                    return 'таблетки покрытые кишечнорастворимой оболочкой, пролонгированного действия'
                return 'таблетки кишечнорастворимые, покрытые пленочной оболочкой'
            
            elif show_matches(POKR_OBOL_DLIA_KISH, text) == 'покрытые оболочкой':
                return 'таблетки кишечнорастворимые, покрытые оболочкой'
        
            return 'таблетки кишечнорастворимые'
        
        
        # PROLONGIROVANNOGO DEISTVIJA
        
        
        elif show_matches(NAME_ADD_PROLONG, text) == 'пролонгированногодействия':
            if show_matches(POKR_PLEN_OBOL, text) == 'покрытые пленочной оболочкой':
                return 'таблетки прологированного действия, покрытые пленочной оболочкой'
            elif show_matches(POKR_OBOL, text) == 'покрытыоболочкой':
                return 'таблетки пролонгированного действия, покрытые оболочкой'
            elif show_matches(NAME_ADD_DELIMIE, text) == 'делимые':
                return 'таблетки прологированного действия, делимые'
            
            return 'таблетки пролонгированного действия'
        
        
        
        # DLYA RASSASIVANIA
        
        
        elif show_matches(NAME_ADD_RASS, text) == 'длярассасывания':
            if show_matches(NAME_ADD_BEZ_SAHARA, text) == 'без сахара':
                return 'таблетки для рассасывания без сахара'
            elif show_matches(NAME_ADD_DLYA_DETEY, text) == 'длядетей':
                return 'таблетки для рассасывания для детей'
            elif show_matches(NAME_ADD_GOMEOPAT, text) == 'гомеопатические':
                return 'таблетки для рассасывания гомеопатические'
            else:
                return 'таблетки для рассасывания'
        
        
         # S ZAMEDLENNIM VYSVOBOGDENIEM
    
    
        elif show_matches(NAME_ADD_ZAM_VYSV, text) == 'таблетки с замедленным высвобождением':
            if show_matches(POKR_OBOL, text) == 'покрытыеоболочкой':
                return 'таблетки с замедленным высвобождением, покрытые оболочкой'
            return 'таблетки с замедленным высвобождением'
        
        
        # S MODIFICIROVANNYM VYSVOBOGDENIEM
    
    
        elif show_matches(NAME_ADD_MODIF_VYSVOB, text) == 'таблетки с модифицированным высвобождением':
            
            if show_matches(POKR_PLEN_OBOL, text) == 'покрытые пленочной оболочкой':
                return 'таблетки с модифицированным высвобождением, покрытые пленочной оболочкой'
            elif show_matches(POKR_OBOL, text) == 'покрытыеоболочкой':
                return 'таблетки с модифицированным высвобождением, покрытые оболочкой'
            
            return 'таблетки с модифицированным высвобождением'
        
        
        # SHIPUCHIE
    
    
        elif show_matches(NAME_ADD_SHIPUCHUE, text) == 'шипучие':
            if show_matches(NAME_ADD_DLYA_DETEY, text) == 'длядетей':
                return 'таблетки шипучие для детей'
            return 'таблетки шипучие'
        
        
        # ZHEVATELNIE 
        
        
        elif show_matches(NAME_ADD_ZHEVATELNIE, text) == 'жевательные':
            if show_matches(NAME_ADD_DLYA_DETEY, text) == 'длядетей':
                return 'таблетки жевательные для детей'
            elif show_matches(NAME_ADD_DLIA_PRIG_SUSPENZII, text) == 'для приготовления суспензии':
                return 'таблетки жевательные или для приготовления суспензии для приема внутрь'
            elif show_matches(POKR_OBOL, text) == 'покрытыоболочкой':
                return 'таблетки жевательные, покрытые оболочкой'
            return 'таблетки жевательные'
        
        
        # RETARD 
        
        
        elif show_matches(NAME_ADD_RAPID_RETARD, text) == 'рапид-ретард':
            if show_matches(POKR_OBOL, text) == 'покрытыеоболочкой':
                return 'таблетки рапид-ретард, покрытые оболочкой'
            return 'таблетки рапид-ретард'
        
        elif show_matches(NAME_ADD_RETARD, text) == 'ретард':
            if show_matches(POKR_OBOL, text) == 'покрытыеоболочкой':
                return 'таблетки ретард, покрытые оболочкой'
            elif show_matches(POKR_PLEN_OBOL, text) == 'покрытые пленочной оболочкой':
                return 'таблетки ретард, покрытые пленочной оболочкой'
            
            return 'ретард'
        
        
        # S KONTROL VYSVOBOGDENIEM 
        
        
        elif show_matches(NAME_ADD_KONTR_VYSVOB, text) == 'таблетки с контролируемым высвобождением':
            
            if show_matches(POKR_PLEN_OBOL, text) == 'покрытые пленочной оболочкой':
                return 'таблетки с контролируемым высвобождением, покрытые пленочной оболочкой'
            elif show_matches(POKR_OBOL, text) == 'покрытыеоболочкой':
                return 'таблетки с контролируемым высвобождением, покрытые оболочкой'
            return 'таблетки с контролируемым высвобождением'
        
        
        #  PLEN OBOLOCHKA
    
    
        elif show_matches(POKR_PLEN_OBOL, text) == 'покрытые пленочной оболочкой':
            if show_matches(NAME_ADD_KOMPLEKT, text) == 'в комплекте':
                return 'таблетки покрытые пленочной оболочкой, в комплекте'
            elif show_matches(NAME_ADD_DLYA_DETEY, text) == 'для детей':
                return 'таблетки покрытые пленочной оболочкой (для детей)'
            elif show_matches(NAME_ADD_SAH_OBL, text) == 'покрытые сахарной оболочкой':
                return 'таблетки покрытые сахарной оболочкой'
            return 'таблетки покрытые пленочной оболочкой'
        
        
        #  OBOLOCHKA
        
        
        elif show_matches(POKR_OBOL, text) == 'покрытыеоболочкой':
            if show_matches(NAME_ADD_KOMPLEKT, text) == 'в комплекте':
                return 'таблетки покрытые оболочкой, в комплекте'
            elif show_matches(NAME_ADD_GOMEOPAT, text) == 'гомеопатические':
                return 'таблетки покрытые оболочкой, гомеопатические'
            elif show_matches(NAME_ADD_DELIMIE, text) == 'делимые':
                return 'таблетки покрытые оболочкой, делимые'
            elif show_matches(NAME_ADD_DLYA_DETEY, text) == 'для детей':
                return 'таблетки покрытые оболочкой, для детей'
            elif show_matches(NAME_ADD_DLIA_PRIG_SUSPENZII, text) == 'для приготовления суспензии':
                return 'таблетки покрытые оболочкой, для приготовления суспензии для приема внутрь'
            elif show_matches(NAME_ADD_SAH_OBL, text) == 'покрытые сахарной оболочкой':
                return 'таблетки покрытые сахарной оболочкой'
            return 'таблетки покрытые оболочкой'
        
        
        #  SAHARNAJA OBOLOCHKA
        
        
        elif show_matches(NAME_ADD_SAH_OBL, text) == 'покрытые сахарной оболочкой':
            return 'таблетки покрытые сахарной оболочкой'
        
        elif show_matches(NAME_ADD_SUBLINGUALNO, text) == 'сублингвально':
            return 'таблетки сублингвальные'
        
        elif show_matches(NAME_ADD_LINGUALNO, text) == 'лингвально':
            return 'таблетки лингвальные'
        
        elif show_matches(NAME_ADD_PODJAZYCHNIE, text) == 'подъязычные':
            if show_matches(NAME_ADD_GOMEOPAT, text) == 'гомеопатические':
                return 'таблетки подъязычные гомеопатические'
            return 'таблетки подъязычные'
        
        elif show_matches(NAME_ADD_VGINALNYE, text) == 'вагинальные':
            return 'таблетки вагинальные'
        
        elif show_matches(NAME_ADD_DLYA_DETEY, text) == 'длядетей':
            if show_matches(NAME_ADD_DISPERGIRUEMYE, text) == 'диспергируемые':
                return 'таблетки для детей диспергируемые'
            return 'таблетки для детей'
        
        elif show_matches(NAME_ADD_DISPERGIRUEMYE, text) == 'диспергируемые':
            if show_matches(NAME_ADD_V_POLOSTI_RTA, text) == 'в полости рта':
                return 'таблетки диспергируемые в полости рта'
            return 'таблетки диспергируемые'
        
        elif show_matches(NAME_ADD_GOMEOPAT, text) == 'гомеопатические':
            return 'таблетки гомеопатические'
        
        elif show_matches(NAME_ADD_PIROTECHN, text) == 'пиротехнические':
            return 'таблетки пиротехнические'
        
        elif show_matches(NAME_ADD_DEPO, text) == 'депо':
            return 'таблетки депо'
        
        elif show_matches(NAME_ADD_LIOFIL, text) == 'лиофилизированные':
            return 'таблетки лиофилизированные'
        
        elif show_matches(NAME_ADD_RASTVORIMIE, text) == 'таблетки растворимые':
            return 'таблетки растворимые'
        else:
            return 'таблетки'
    else:
        'no_data'

def kapsula_search(text):
    
    Forma = fact('Forma',['name'])
    # парсинг форм
    KAPSULA = caseless_pipeline(['капс']).interpretation(Forma.name.const('капсулы'))
    KAPSULA_MOD_VYSV = caseless_pipeline(['мод высвоб','модиф высв']).interpretation(Forma.name.const('капсулы с модифицированным высвобождением'))
    KAPSULA_PROLONG = caseless_pipeline(['пролонг']).interpretation(Forma.name.const('капсулы с пролонгированным высвобождением'))
    KAPSULA_RETARD = caseless_pipeline(['ретард']).interpretation(Forma.name.const('капсулы ретард'))
    
    if show_matches(KAPSULA, text) == 'капсулы':
        if show_matches(KAPSULA_MOD_VYSV, text) == 'капсулысмодифицированнымвысвобождением':
            return 'капсулы с модифицированным высвобождением'
        elif show_matches(KAPSULA_PROLONG, text) == 'капсулыспролонгированнымвысвобождением':
            return 'капсулы с пролонгированным высвобождением'
        elif show_matches(KAPSULA_RETARD, text) == 'капсулыретард':
            return 'капсулы ретард'
        else:
            return 'капсулы'

def forma_identification(text):
    Forma = fact('Forma',['name'])
    TABLETKI = caseless_pipeline(['таблетки','тбл','таб.','табл','тбл.','таб','табп/пл','ТБ','тб','ТАБ.','ТАБ']).interpretation(Forma.name.const('таблетки'))
    KAPSULA = caseless_pipeline(['капс']).interpretation(Forma.name.const('капсулы'))
    if show_matches(TABLETKI, text) == "таблетки":
        return tabletka_search(text)
    elif show_matches(KAPSULA, text) == 'капсулы':
        return kapsula_search(text)
    else:
        return 'таблетки'


####
####
#### ПОИСК РОДИТЕЛЬСКОЙ ФОРМЫ
####
####


dict_with_tabl_form = {    
            'таблетки': [
                        'каплеты',
                        'таблетки вагинальные',
                        'таблетки внутриматочные',
                        'таблетки гомеопатические',
                        'таблетки диспергируемые',
                        'таблетки для детей',
                        'таблетки для ингаляций',
                        'таблетки для приготовления глазных капель',
                        'таблетки для приготовления капель',
                        'таблетки для приготовления раствора',
                        'таблетки для приготовления суспензии',
                        'таблетки для пригототовления раствора для местного применения',
                        'таблетки для рассасывания',
                        'таблетки жевательные',
                        'таблетки жевательные/растворимые',
                        'таблетки защечные',
                        'таблетки кишечнорастворимые',
                        'таблетки лиофилизированные',
                        'таблетки подъязычные (сублингвальные)',
                        'таблетки подъязычные гомеопатические',
                        'таблетки покрытые кишечнорастворимой водной оболочкой',
                        'таблетки покрытые кишечнорастворимой оболочкой',
                        'таблетки покрытые кишечнорастворимой сахарной оболочкой',
                        'таблетки покрытые оболочкой',
                        'таблетки покрытые пленочной оболочкой',
                        'таблетки пролонгированного действия',
                        'таблетки рапид-ретард покрытые оболочкой',
                        'таблетки растворимые',
                        'таблетки ретард',
                        'таблетки ретард покрытые оболочкой',
                        'таблетки ретард покрытые пленочной оболочкой',
                        'таблетки с замедленным высвобождением',
                        'таблетки с контролируемым высвобождением',
                        'таблетки с модифицированным высвобождением',
                        'таблетки с пролонгированным высвобождением',
                        'таблетки фруктовые',
                        'таблетки шипучие',
                        'таблетки-лиофилизат',
                        'таблеток набор'],
            'таблетки вагинальные': ['таблетки вагинальные шипучие'],
            'таблетки гомеопатические': ['таблетки гомеопатические для рассасывания'],
            'таблетки диспергируемые': ['таблетки диспергируемые в полости рта',
                                        'таблетки диспергируемые для детей',
                                        'таблетки, диспергируемые в полости рта'],
            'таблетки для приготовления капель': ['таблетки для приготовления капель глазных',
                                                  'таблетки для приготовления капель для ингаляций',
                                                  'таблетки для приготовления капель для местного применения',
                                                  'таблетки для приготовления капель для нанесения на слизистую оболочку полости рта',
                                                  'таблетки для приготовления капель для приема внутрь',
                                                  'таблетки для приготовления капель зубных',
                                                  'таблетки для приготовления капель назальных',
                                                  'таблетки для приготовления капель подъязычных',
                                                  'таблетки для приготовления капель ушных'],
            'таблетки для приготовления капель глазных': ['таблетки для приготовления капель глазных с пролонгированным высвобождением'],
            'таблетки для приготовления раствора': ['таблетки для приготовления раствора вагинального',
                                                    'таблетки для приготовления раствора внутриматочного',
                                                    'таблетки для приготовления раствора для внутриартериального введения',
                                                    'таблетки для приготовления раствора для внутрибрюшинного введения',
                                                    'таблетки для приготовления раствора для внутривенного введения',
                                                    'таблетки для приготовления раствора для внутриглазного введения',
                                                    'таблетки для приготовления раствора для внутрикожного введения',
                                                    'таблетки для приготовления раствора для внутрикоронарного введения',
                                                    'таблетки для приготовления раствора для внутримышечного введения',
                                                    'таблетки для приготовления раствора для внутриполостного введения',
                                                    'таблетки для приготовления раствора для внутрипузырного введения',
                                                    'таблетки для приготовления раствора для внутрисуставного введения',
                                                    'таблетки для приготовления раствора для гастроэнтерального введения',
                                                    'таблетки для приготовления раствора для гемодиализа',
                                                    'таблетки для приготовления раствора для гемодиафильтрации',
                                                    'таблетки для приготовления раствора для гемофильтрации',
                                                    'таблетки для приготовления раствора для ингаляций',
                                                    'таблетки для приготовления раствора для интраамниального введения',
                                                    'таблетки для приготовления раствора для интралимфатического введения',
                                                    'таблетки для приготовления раствора для интратекального введения',
                                                    'таблетки для приготовления раствора для инфузий',
                                                    'таблетки для приготовления раствора для инъекций',
                                                    'таблетки для приготовления раствора для местного и наружного применения',
                                                    'таблетки для приготовления раствора для местного применения',
                                                    'таблетки для приготовления раствора для накожного скарификационного нанесения',
                                                    'таблетки для приготовления раствора для нанесения на десны',
                                                    'таблетки для приготовления раствора для наружного применения',
                                                    'таблетки для приготовления раствора для околосуставного введения',
                                                    'таблетки для приготовления раствора для орошения желудка',
                                                    'таблетки для приготовления раствора для орошения мочевого пузыря',
                                                    'таблетки для приготовления раствора для парабульбарного введения',
                                                    'таблетки для приготовления раствора для перитонеального диализа',
                                                    'таблетки для приготовления раствора для подкожного введения',
                                                    'таблетки для приготовления раствора для полоскания',
                                                    'таблетки для приготовления раствора для приема внутрь',
                                                    'таблетки для приготовления раствора для проведения приктеста',
                                                    'таблетки для приготовления раствора для промывания глаз',
                                                    'таблетки для приготовления раствора для промывания полости носа',
                                                    'таблетки для приготовления раствора для промывания полости рта',
                                                    'таблетки для приготовления раствора для промывания слухового прохода',
                                                    'таблетки для приготовления раствора для слизистой оболочки полости рта',
                                                    'таблетки для приготовления раствора для субконъюнктивального введения',
                                                    'таблетки для приготовления раствора для экстраамниального введения',
                                                    'таблетки для приготовления раствора для эндосинусиального введения',
                                                    'таблетки для приготовления раствора для эндотрахеального введения',
                                                    'таблетки для приготовления раствора зубного',
                                                    'таблетки для приготовления раствора ректального',
                                                    'таблетки для приготовления раствора трансдермального',
                                                    'таблетки шипучие для приготовления раствора для местного и наружного применения'],
            'таблетки для приготовления суспензии': ['таблетки для приготовления суспензии вагинальной',
                                                     'таблетки для приготовления суспензии для внутрикожного введения',
                                                     'таблетки для приготовления суспензии для внутримышечного введения',
                                                     'таблетки для приготовления суспензии для внутрисуставного введения',
                                                     'таблетки для приготовления суспензии для гастроэнтерального введения',
                                                     'таблетки для приготовления суспензии для имплантации',
                                                     'таблетки для приготовления суспензии для ингаляций',
                                                     'таблетки для приготовления суспензии для инъекций',
                                                     'таблетки для приготовления суспензии для инъекций с пролонгированным высвобождением',
                                                     'таблетки для приготовления суспензии для местного применения',
                                                     'таблетки для приготовления суспензии для накожного скарификационного нанесения',
                                                     'таблетки для приготовления суспензии для наружного применения',
                                                     'таблетки для приготовления суспензии для околосуставного введения',
                                                     'таблетки для приготовления суспензии для подкожного введения',
                                                     'таблетки для приготовления суспензии для приема внутрь',
                                                     'таблетки для приготовления суспензии для слизистой оболочки полости рта',
                                                     'таблетки для приготовления суспензии для эндосинусиального введения',
                                                     'таблетки для приготовления суспензии для эндотрахеального введения',
                                                     'таблетки для приготовления суспензии зубной',
                                                     'таблетки для приготовления суспензии ректальной'],
            'таблетки для рассасывания': ['таблетки для рассасывания без сахара',
                                          'таблетки для рассасывания гомеопатические',
                                          'таблетки для рассасывания гомеопатические для детей',
                                          'таблетки для рассасывания для детей'],
            'таблетки жевательные': ['таблетки жевательные без сахара',
                                     'таблетки жевательные для детей',
                                     'таблетки жевательные или для приготовления суспензии для приема внутрь'],
            'таблетки защечные': ['таблетки защечные мукоадгезивные'],
            'таблетки кишечнорастворимые': ['таблетки кишечнорастворимые покрытые оболочкой',
                                            'таблетки кишечнорастворимые покрытые пленочной оболочкой',
                                            'таблетки кишечнорастворимые с пролонгированным высвобождением'],
            'таблетки кишечнорастворимые с пролонгированным высвобождением': ['таблетки кишечнорастворимые с пролонгированным высвобождением, покрытые пленочной оболочкой'],
            'таблетки покрытые пленочной оболочкой': ['таблетки покрытые кишечнорастворимой пленочной оболочкой',
                                                      'таблетки покрытые пленочной оболочкой гомеопатические',
                                                      'таблетки покрытые пленочной оболочкой для детей'],
            'таблетки покрытые оболочкой': ['таблетки покрытые оболочкой гомеопатические',
                                            'таблетки покрытые оболочкой делимые',
                                            'таблетки покрытые сахарной оболочкой'],
            'набор\nтаблетки покрытые оболочкой': ['таблетки покрытые оболочкой набор'],
            'таблетки пролонгированного действия': ['таблетки пролонгированного действия покрытые оболочкой',
                                                    'таблетки пролонгированного действия покрытые пленочной оболочкой',
                                                    'таблетки пролонгированного действия покрытые сахарной оболочкой',
                                                    'таблетки пролонгированного действия, покрытые кишечнорастворимой оболочкой'],
            'таблетки с замедленным высвобождением': ['таблетки с замедленным высвобождением покрытые оболочкой'],
            'таблетки с контролируемым высвобождением': ['таблетки с контролируемым высвобождением покрытые оболочкой',
                                                         'таблетки с контролируемым высвобождением покрытые пленочной оболочкой'],
            'таблетки с модифицированным высвобождением': ['таблетки с модифицированным высвобождением покрытые оболочкой',
                                                           'таблетки с модифицированным высвобождением покрытые пленочной оболочкой'],
            'таблетки с пролонгированным высвобождением': ['таблетки с пролонгированным высвобождением покрытые пленочной оболочкой'],
            'таблетки для детей': ['таблетки шипучие для детей']
    }

def parent_name_search(what_to_look):
    
    c = len(dict_with_tabl_form)-1
    for k,v in dict_with_tabl_form.items():
        if c==0:
            return('it_is_parent_name')
        elif what_to_look in v:
            parent_form_name = k
            return(parent_form_name)
        c -= 1

def parent_name_list_to_provide_search(input_parent_name):
    if input_parent_name == 'it_is_parent_name':
        input_parent_name = 'таблетки'
        return dict_with_tabl_form[input_parent_name] + [input_parent_name]
    else:
        return dict_with_tabl_form[input_parent_name] + [input_parent_name]


#print(tabletka_search('суприма-лор /мед-лимон/ табл. х16'))